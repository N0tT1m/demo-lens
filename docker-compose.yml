services:
  sqlserver:
    image: mcr.microsoft.com/mssql/server:2022-latest
    environment:
      - ACCEPT_EULA=Y
      - SA_PASSWORD=${SQL_PASSWORD}
      - MSSQL_PID=Express
    ports:
      - "1433:1433"
    volumes:
      - sqldata:/var/opt/mssql
      - ./init-db.sql:/usr/config/init-db.sql
      - ./database_performance_indexes.sql:/usr/config/database_performance_indexes.sql
    restart: unless-stopped
    healthcheck:
      test: /opt/mssql-tools/bin/sqlcmd -S localhost -U sa -P "${SQL_PASSWORD}" -Q "SELECT 1" || exit 1
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s
    networks:
      - cs2-network

  cs2-demo-parser:
    build: 
      context: .
      dockerfile: Dockerfile
    ports:
      - "8080:80"
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
      - CONNECTION_STRING=Server=sqlserver,1433;Database=demos;User Id=sa;Password=${SQL_PASSWORD};TrustServerCertificate=true;
      - ASPNETCORE_URLS=http://+:80
      - DOTNET_RUNNING_IN_CONTAINER=true
      - SQL_PASSWORD=${SQL_PASSWORD}
    volumes:
      - ./uploads:/app/uploads
      - ./data:/app/data
    depends_on:
      sqlserver:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:80/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - cs2-network

volumes:
  sqldata:
    driver: local

networks:
  cs2-network:
    driver: bridge